// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PhotoSi.ProductsService.Database;

#nullable disable

namespace PhotoSi.ProductsService.Database.Migrations
{
    [DbContext(typeof(ProductsDbContext))]
    partial class ProductsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("PhotoSi.ProductsService.Models.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Categories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("b3eaf4bd-2e57-4041-8cf0-6a19a55c9fb9"),
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Stampa semplice di una foto",
                            Name = "Stampe"
                        },
                        new
                        {
                            Id = new Guid("59cf0ad7-89a8-4dd5-83da-9cb50608080b"),
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Gadget per il tempo libero",
                            Name = "Gadgets"
                        },
                        new
                        {
                            Id = new Guid("1c3e24c8-b0c5-4c9b-8b28-f5c5ec2c819a"),
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Biglietti auguri per ricorrenze",
                            Name = "Biglietti"
                        });
                });

            modelBuilder.Entity("PhotoSi.ProductsService.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("ccbd7f1e-be07-4e8e-ab99-9ddc97184ebd"),
                            CategoryId = new Guid("b3eaf4bd-2e57-4041-8cf0-6a19a55c9fb9"),
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Stampa di una foto in formato 10x15 cm",
                            ImageUrl = "https://example.com/images/stampa-foto-10x15.jpg",
                            Name = "Stampa Foto 10x15",
                            Price = 10.50m
                        },
                        new
                        {
                            Id = new Guid("7da4e09c-70a4-49e9-8079-e2c303dc13a5"),
                            CategoryId = new Guid("59cf0ad7-89a8-4dd5-83da-9cb50608080b"),
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Tazza con stampa personalizzata",
                            ImageUrl = "https://example.com/images/tazza-personalizzata.jpg",
                            Name = "Tazza Personalizzata",
                            Price = 15.00m
                        },
                        new
                        {
                            Id = new Guid("00f04905-a718-4d28-b652-3237cd4ccbee"),
                            CategoryId = new Guid("1c3e24c8-b0c5-4c9b-8b28-f5c5ec2c819a"),
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Biglietto di auguri personalizzato per ogni occasione",
                            ImageUrl = "https://example.com/images/biglietto-auguri.jpg",
                            Name = "Biglietto di Auguri",
                            Price = 5.00m
                        },
                        new
                        {
                            Id = new Guid("56abd4b5-1c48-4296-84cf-ee05e7862780"),
                            CategoryId = new Guid("59cf0ad7-89a8-4dd5-83da-9cb50608080b"),
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Calendario personalizzato da tavolo",
                            ImageUrl = "https://example.com/images/calendario-tavolo.jpg",
                            Name = "Calendario da Tavolo",
                            Price = 20.00m
                        },
                        new
                        {
                            Id = new Guid("fa3ffd88-f6a5-4599-9408-e6d655588b52"),
                            CategoryId = new Guid("b3eaf4bd-2e57-4041-8cf0-6a19a55c9fb9"),
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Poster di grandi dimensioni per decorare le pareti",
                            ImageUrl = "https://example.com/images/poster-50x70.jpg",
                            Name = "Poster 50x70",
                            Price = 30.00m
                        },
                        new
                        {
                            Id = new Guid("4a14eaac-3f71-41dc-a5ac-c0f8e6c2fefd"),
                            CategoryId = new Guid("1c3e24c8-b0c5-4c9b-8b28-f5c5ec2c819a"),
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Album fotografico personalizzato per conservare i ricordi",
                            ImageUrl = "https://example.com/images/album-fotografico.jpg",
                            Name = "Album Fotografico",
                            Price = 25.00m
                        },
                        new
                        {
                            Id = new Guid("3e1a498f-9008-4030-bea9-9f79e5e92eb3"),
                            CategoryId = new Guid("b3eaf4bd-2e57-4041-8cf0-6a19a55c9fb9"),
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Stampa di alta qualità su tela per un effetto artistico",
                            ImageUrl = "https://example.com/images/stampa-tela.jpg",
                            Name = "Stampa su Tela",
                            Price = 45.00m
                        });
                });

            modelBuilder.Entity("PhotoSi.ProductsService.Models.Product", b =>
                {
                    b.HasOne("PhotoSi.ProductsService.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("PhotoSi.ProductsService.Models.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
